/* Mini project. Book store.

1. Create and fill in 3 tables: books, genre and author.
2. Fill in the table with the fines that have to pay the driver according to
the data from the traffic violation table. Fill in only the empty fields of the
sum_fine column.
3. Display titles of books and their authors.
4. Find the title of all books. If the books of the specific author are
currently not in stock - specify Null instead of the book title.
5. Find all genres of books that are not represented in stock.
6. Select novels (selected columns are genre, book, author) sorted by title.
7. Find the amount of books of each author in stock.
Select  authors with the amount of books < 10. Sort the amount
of books in ascending order. */


/* Create and fill in the table author */

CREATE TABLE author(
  author_id INT PRIMARY KEY AUTO_INCREMENT,
  name_author VARCHAR(50)
);

INSERT INTO author(
            author_id,
            name_author
          )

VALUES (1, "Булгаков М.А."),
        (2, "Достоевский Ф.М."),
        (3, "Есенин С.А."),
        (4, "Пастернак Б.Л."),
        (5, "Лермонтов М.Ю.");


/* Create and fill in the table genre. */

CREATE TABLE genre(
              genre_id INT PRIMARY KEY AUTO_INCREMENT,
              name_genre VARCHAR(30)
            );

INSERT INTO genre(
            genre_id,
            name_genre
            )

VALUES (1, "Роман"),
       (2, "Поэзия"),
       (3, "Приключения");


/* Create and fill in the table book. */

CREATE TABLE book(
            book_id INT PRIMARY KEY AUTO_INCREMENT,
            title VARCHAR(50),
            author_id INT,
            genre_id INT,
            price DECIMAL(8,2),
            amount INT,
            FOREIGN KEY (author_id) REFERENCES author (author_id),
            FOREIGN KEY (genre_id) REFERENCES genre (genre_id)
          );

INCERT INTO book(
            book_id,
            title,
            author_id,
            genre_id,
            price,
            amount)

VALUES
      (1,	"Мастер и Маргарита",	1, 1, 670.99, 3),
      (2,	"Белая гвардия", 1, 1, 540.50, 5),
      (3,	"Идиот", 2, 1, 460.00, 10),
      (4, "Братья Карамазовы", 2,	1, 799.01, 3),
      (5,	"Игрок", 2,	1, 480.50, 10),
      (6,	"Стихотворения и поэмы", 3,	2, 650.00, 15),
      (7,	"Черный человек",	3, 2,	570.20,	6),
      (8,	"Лирика",	4, 2,	518.99,	2);

/* Display titles of books and their authors. */

SELECT title, name_author
FROM
  author INNER JOIN book
ON author.author_id = book.author_id;

/* Select the title, genre and price of the books, which amount is more than 8.
          Sort the result in descending order of price. */

SELECT
  title,
  name_genre,
  price
FROM
  book
INNER JOIN
  genre
ON book.genre_id = genre.genre_id
AND book.amount > 8
ORDER BY 3 DESC;

/* Select the title of all books. If the books of the specific author are
currently not in stock - specify Null instead of the book title. */

SELECT name_author, title
FROM
  author
LEFT JOIN
  book
ON author.author_id = book.author_id
ORDER BY name_author;

/* Find all genres of books that are not represented in stock. */

SELECT
  name_genre
FROM
  genre
LEFT JOIN
  book
ON genre.genre_id = book.genre_id
WHERE
  amount IS NULL;

/* Select novels (selected columns are genre, book, author) sorted by title. */

SELECT
  name_genre,
  title,
  name_author

FROM
  genre INNER jOIN book
  ON genre.genre_id = book.genre_id
    INNER JOIN author
      ON book.author_id = author.author_id
WHERE
  name_genre
LIKE "%Роман%"

ORDER BY
  title ASC;

/* Count the amount of books of each author in stock.
Select  authors with the amount of books < 10. Sort the amount 
of books in ascending order. */

  SELECT
    name_author,
    SUM(book.amount) AS Количество
  FROM
    author
    LEFT JOIN book on author.author_id = book.author_id
  GROUP BY
    name_author
  HAVING
    Количество < 10
    or COUNT(title) = 0
  ORDER BY
    2;
